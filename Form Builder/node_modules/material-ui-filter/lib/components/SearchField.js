'use strict';

exports.__esModule = true;
exports.SearchField = undefined;

var _selectors = require('../store/selectors');

var filterSelectors = _interopRequireWildcard(_selectors);

var _FormatSize = require('@material-ui/icons/FormatSize');

var _FormatSize2 = _interopRequireDefault(_FormatSize);

var _IconButton = require('@material-ui/core/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Switch = require('@material-ui/core/Switch');

var _Switch2 = _interopRequireDefault(_Switch);

var _TextField = require('@material-ui/core/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _Toolbar = require('@material-ui/core/Toolbar');

var _Toolbar2 = _interopRequireDefault(_Toolbar);

var _Tooltip = require('@material-ui/core/Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _pickers = require('@material-ui/pickers');

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var SearchField = exports.SearchField = function SearchField(_ref) {
  var theme = _ref.theme,
      queryIndex = _ref.queryIndex,
      currentField = _ref.currentField,
      query = _ref.query,
      formatMessage = _ref.formatMessage,
      fields = _ref.fields,
      handleQueryChange = _ref.handleQueryChange,
      DateTimeFormat = _ref.DateTimeFormat,
      locale = _ref.locale,
      okLabel = _ref.okLabel,
      cancelLabel = _ref.cancelLabel;

  var _filterSelectors$sele = filterSelectors.selectQueryProps(query),
      value = _filterSelectors$sele.value,
      isCaseSensitive = _filterSelectors$sele.isCaseSensitive;

  if (queryIndex == null || currentField == null || query == null || handleQueryChange == null || fields == null) {
    return _react2.default.createElement('div', null);
  }

  var fieldType = '';
  var fieldLabel = '';

  fields.map(function (field) {
    if (field.name === currentField.value) {
      fieldType = field.type;
      fieldLabel = field.label;
    }
    return field;
  });

  if (fieldType === 'date') {
    return _react2.default.createElement(
      _Toolbar2.default,
      null,
      _react2.default.createElement(_pickers.KeyboardDatePicker, {
        clearable: true,
        label: formatMessage ? formatMessage({ id: 'enter_query_text' }) : '',
        format: 'DD/MM/YYYY',
        placeholder: (0, _moment2.default)().format('DD/MM/YYYY'),
        value: value,
        onChange: function onChange(val) {
          handleQueryChange(queryIndex, 'value', val ? val.format() : null);
        },
        autoOk: true,
        animateYearScrolling: false
      })
    );
  }

  if (fieldType === 'bool') {
    return _react2.default.createElement(
      _Toolbar2.default,
      null,
      _react2.default.createElement(_Switch2.default, {
        label: fieldLabel,
        onChange: function onChange(e, val) {
          handleQueryChange(queryIndex, 'value', val);
        },
        value: value
      })
    );
  } else {
    //string

    return _react2.default.createElement(
      _Toolbar2.default,
      null,
      _react2.default.createElement(_TextField2.default, {
        fullWidth: true,
        name: 'value',
        onChange: function onChange(e, val) {
          handleQueryChange(queryIndex, 'value', e.target.value);
        },
        value: value ? value : '',
        placeholder: formatMessage ? formatMessage({ id: 'enter_query_text' }) : ''
      }),
      _react2.default.createElement(
        _Tooltip2.default,
        {
          id: 'tooltip-bottom-start',
          title: formatMessage ? formatMessage({ id: isCaseSensitive ? 'disable_case_sensitivity' : 'enable_case_sensitivity' }) : '',
          placement: 'bottom-end'
        },
        _react2.default.createElement(
          _IconButton2.default,
          {
            onClick: function onClick() {
              handleQueryChange(queryIndex, 'isCaseSensitive', !isCaseSensitive);
            },
            color: isCaseSensitive ? 'primary' : undefined
          },
          _react2.default.createElement(_FormatSize2.default, null)
        )
      )
    );
  }
};